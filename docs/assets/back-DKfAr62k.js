const g="locale",p=({getLocaleMessages:e,locales:t})=>{const n=o=>localStorage.setItem(g,o),r=()=>localStorage.getItem(g)||Object.keys(t)[0];return{setLocale:o=>Promise.resolve(o).then(n),getLocale:()=>Promise.resolve().then(r),getMessages:()=>Promise.resolve().then(r).then(e)}};function i(e){this.message=e}i.prototype=new Error,i.prototype.name="InvalidCharacterError";var m=typeof window<"u"&&window.atob&&window.atob.bind(window)||function(e){var t=String(e).replace(/=+$/,"");if(t.length%4==1)throw new i("'atob' failed: The string to be decoded is not correctly encoded.");for(var n,r,o=0,s=0,h="";r=t.charAt(s++);~r&&(n=o%4?64*n+r:r,o++%4)?h+=String.fromCharCode(255&n>>(-2*o&6)):0)r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(r);return h};function v(e){var t=e.replace(/-/g,"+").replace(/_/g,"/");switch(t.length%4){case 0:break;case 2:t+="==";break;case 3:t+="=";break;default:throw"Illegal base64url string!"}try{return function(n){return decodeURIComponent(m(n).replace(/(.)/g,function(r,o){var s=o.charCodeAt(0).toString(16).toUpperCase();return s.length<2&&(s="0"+s),"%"+s}))}(t)}catch{return m(t)}}function a(e){this.message=e}function w(e,t){if(typeof e!="string")throw new a("Invalid token specified");var n=(t=t||{}).header===!0?0:1;try{return JSON.parse(v(e.split(".")[n]))}catch(r){throw new a("Invalid token specified: "+r.message)}}a.prototype=new Error,a.prototype.name="InvalidTokenError";const l="token",d=e=>localStorage.setItem(l,e),c=()=>localStorage.getItem(l),u=()=>localStorage.removeItem(l),f=()=>{const e=c();return e?w(e):{}},I=()=>({login:({username:e,password:t})=>{const r={Authorization:`Basic ${btoa(`${e}:${t}`)}`};return fetch("/login",{headers:r}).then(o=>{if(o.status<200||o.status>=300)throw new Error(o.statusText);return o.text()}).then(d)},logout:e=>Promise.resolve().then(u).then(()=>{if(typeof e=="string")return e}),checkError:({status:e})=>Promise.resolve().then(()=>{if(e===401||e===403)return u(),Promise.reject()}),checkAuth:()=>c()?Promise.resolve():Promise.reject(),getPermissions:()=>Promise.resolve().then(f).then(({roles:e})=>e),getUserId:()=>Promise.resolve().then(f).then(({sub:e})=>e),setToken:e=>Promise.resolve(e).then(d),getToken:()=>Promise.resolve().then(c)});export{I as b,p as g};
