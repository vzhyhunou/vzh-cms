{"version":3,"file":"static/js/332.51e15e03.chunk.js","mappings":"8JAEMA,EAAM,SAACC,EAAQC,GACbC,QAAQC,OACRD,QAAQE,eAAe,WAAYC,KAAKC,UAAUN,IAClDE,QAAQH,IAAIE,GACZC,QAAQK,aAERL,QAAQH,IAAI,oBAAqB,WAAYC,GAC7CE,QAAQH,IAAI,oBAAqBE,GAEzC,EAwCA,mBAAgBO,EAAIC,GAAmB,IAAhBC,EAASD,EAATC,UASnB,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,IACOC,EAAAA,EAAAA,GAAiBJ,GAAM,IAAK,IAC/BK,SAAU,SAAAb,GAAM,OATL,SAAAA,GAAM,OAAIU,IACpBI,MAAK,SAAAC,GAAM,OAzCA,SAAHC,EAAaD,EAAME,GAAc,IAA5BC,EAAKF,EAALE,MAEZC,EAFiCF,EAAJG,KAEpBC,MAAM,KAErB,GACS,UADDF,EAAE,GAEF,OAAQA,EAAE,IACN,IAAK,MACD,IAAMG,EAAOJ,EAAMK,QAAO,SAAAC,GAAM,OAAAA,EAAJC,KAAeC,MAAK,SAAAC,GAAM,MAAe,cAAfA,EAAJC,IAA8B,GAAC,IAC5EC,MAAK,SAAAC,GAAI,OAAAA,EAAFC,KAAeZ,EAAE,EAAE,IAC/B,IAAKG,EACD,OAAO,EAEX,IAAOS,EAA6BT,EAA7BS,GAAIC,EAAyBV,EAAzBU,MAAOC,EAAkBX,EAAlBW,QAASC,EAASZ,EAATY,MAC3B,SAAKD,IAAYA,EAAQlB,KAGlB,CAACP,KAAM,CACVuB,GAAAA,EACAC,MAAOA,GAASA,EAAMjB,GACtBkB,QAASA,EAAQlB,GACjBmB,MAAOA,GAASA,EAAMC,KAAI,SAAAC,GAAM,OAAAA,EAAJR,IAAc,MAElD,IAAK,OACD,MAAO,CAACpB,KAAMU,EAAMK,QAAO,SAAAc,GAAM,OAAAA,EAAJZ,KAAeC,MAAK,SAAAY,GAAM,MAAe,SAAfA,EAAJV,IAAyB,GAAC,IACxEO,KAAI,SAAAI,GAAW,MAAO,CACnBR,GADKQ,EAAFR,GAEHC,MAFYO,EAALP,MAEMjB,GAChB,KAET,QACI,OAAO,EAGf,OAAO,CAEnB,CAKwByB,CAAYhC,EAAMO,EAAQf,EAAO,IAChDc,MAAK,SAAAb,GAEF,OADAF,EAAIC,EAAQC,GACLA,CACX,GAAG,CAIiBwC,CAAOzC,EAAO,EAClCD,IAAAA,GAEP,C","sources":["commons/data/fake.js"],"sourcesContent":["import fakeDataProvider from 'ra-data-fakerest';\n\nconst log = (params, response) => {\n    if (console.group) {\n        console.groupCollapsed('exchange', JSON.stringify(params));\n        console.log(response);\n        console.groupEnd();\n    } else {\n        console.log('FakeRest request ', 'exchange', params);\n        console.log('FakeRest response', response);\n    }\n};\n\nconst getResponse = ({pages}, locale, {path}) => {\n\n    const p = path.split('/');\n\n    switch (p[0]) {\n        case 'pages':\n            switch (p[2]) {\n                case 'one':\n                    const page = pages.filter(({tags}) => tags.some(({name}) => name === 'PUBLISHED'))\n                        .find(({id}) => id === p[3]);\n                    if (!page) {\n                        return false;\n                    }\n                    const {id, title, content, files} = page;\n                    if (!content || !content[locale]) {\n                        return false;\n                    }\n                    return {data: {\n                        id,\n                        title: title && title[locale],\n                        content: content[locale],\n                        files: files && files.map(({name}) => name)\n                    }};\n                case 'menu':\n                    return {data: pages.filter(({tags}) => tags.some(({name}) => name === 'MENU'))\n                        .map(({id, title}) => ({\n                            id,\n                            title: title[locale]\n                        }))\n                    };\n                default:\n                    return false;\n            }\n        default:\n            return false;\n    }\n};\n\nexport default (data, {getLocale}) => {\n\n    const handle = params => getLocale()\n        .then(locale => getResponse(data, locale, params))\n        .then(response => {\n            log(params, response);\n            return response;\n        });\n\n    return {\n        ...fakeDataProvider(data, true),\n        exchange: params => handle(params),\n        log\n    };\n};\n"],"names":["log","params","response","console","group","groupCollapsed","JSON","stringify","groupEnd","data","_ref10","getLocale","_objectSpread","fakeDataProvider","exchange","then","locale","_ref","_ref2","pages","p","path","split","page","filter","_ref3","tags","some","_ref4","name","find","_ref5","id","title","content","files","map","_ref6","_ref7","_ref8","_ref9","getResponse","handle"],"sourceRoot":""}